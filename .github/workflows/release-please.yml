name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write
  repository-projects: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          # Release type should be "node" for Next.js applications
          release-type: node
          # Include component in tag and release title
          include-component-in-tag: false

  # Deploy to Vercel after successful release
  deploy-production:
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: vercel-deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

      - name: Comment on Release
        uses: actions/github-script@v7
        with:
          script: |
            const { tag_name } = context.payload.release || { tag_name: '${{ needs.release-please.outputs.tag_name }}' };
            const deploymentUrl = '${{ steps.vercel-deploy.outputs.deployment_url }}' || 'https://swamicare.in';
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `🚀 **Release ${tag_name} deployed!**
              
              ✅ Production deployment completed
              🌐 Live at: ${deploymentUrl}
              📋 Release notes: https://github.com/${context.repo.owner}/${context.repo.repo}/releases/tag/${tag_name}
              
              ### Deployment Details
              - **Version**: ${tag_name}
              - **Environment**: Production
              - **Status**: ✅ Live`
            });